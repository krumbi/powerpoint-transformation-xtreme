version: '3.8'

services:
  text-to-text:
    image: text-to-text
    build:
      context: ../text-to-text
      dockerfile: Dockerfile
    container_name: pptx-step-2-text-to-text
    depends_on:
      avatar-generation:
        condition: service_completed_successfully
    volumes:
      - ./data/text-to-text/input:/input # Wird von GUI angelegt, enthält slides.pptx
      - output-ttt:/output # Legt slide_X.txt ab
    env_file: run.env

  avatar-generation:
    image: avatar-generation
    build:
      context: ../avatar-generation
      dockerfile: Dockerfile
    container_name: pptx-step-1-avatar-generation
    volumes:
      - ./data/avatar-generation/input:/input # Wird von GUI angelegt, enthält Prompt für Avatar als avatar.txt
      - ./data/avatar-generation/output:/output # Legt avatar.png ab
    env_file: run.env

  text-to-speech:
    image: text-to-speech
    build:
      context: ../voice-cloning/TTS_VC_english
      dockerfile: Dockerfile
    container_name: pptx-step-3-text-to-speech
    depends_on:
      text-to-text:
        condition: service_completed_successfully
    volumes:
      - ./data/text-to-speech/input:/input # Enthält voice.mp3
      - output-ttt:/input/ttt # Enthält slide_X.txt von text-to-text
      - output-tts:/output # Legt audio_X.wav ab

  lip-sync:
    image: lip-sync
    build:
      context: ../lip-sync
      dockerfile: Dockerfile
    container_name: pptx-step-4-lip-sync
    depends_on:
      text-to-speech:
        condition: service_completed_successfully
      avatar-generation:
        condition: service_completed_successfully
    volumes:
      - ./data/avatar-generation/output:/input # Enthält avatar.png
      - output-tts:/input/tts # Enthält audio_X.wav von text-to-speech
      - output-ls:/output # Legt video_X.mp4 ab
  
  video-generation:
    image: video-generation
    build:
      context: ../create-video
      dockerfile: Dockerfile
    container_name: pptx-step-5-video-generation
    depends_on:
      lip-sync:
        condition: service_completed_successfully
    volumes:
      - ./data/video-generation/input:/input # Wird von GUI angelegt, enthält slides.pptx
      - output-ls:/input/ls # Enthält video_X.mp4 von lip-sync
      - ./data/video-generation/output:/output # Legt video.mp4 ab

# Output von video generation umbennen in slide Titel und in cwd verschieben
volumes:
  output-ttt:
    driver: local
    driver_opts:
      type: none
      device: ./data/text-to-text/output
      o: bind
  output-tts:
    driver: local
    driver_opts:
      type: none
      device: ./data/text-to-speech/output
      o: bind
  output-ls:
    driver: local
    driver_opts:
      type: none
      device: ./data/lip-sync/output
      o: bind